group 'MobileAndroidFramework'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://mvnrepository.com/artifact/com.sikulix/sikulixapi" }
    maven { url "https://mvnrepository.com/artifact/jxgrabkey/jxgrabkey" }
    maven { url "https://mvnrepository.com/artifact/org.sikuli/sikuli-api" }

    flatDir {
        dirs 'libs'
    }
}

//tasks.withType(Test) {
//    jvmArgs '-Xms128m', '-Xmx1024m', '-XX:MaxPermSize=128m'
//    maxParallelForks = 4  // this runs tests parallel if more than one class
//    testLogging {
//        exceptionFormat "full"
//        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
//        displayGranularity = 0
//    }
//}
//
//task runTestSuite(type: Test) {
//    doFirst{
//        println("Running $taskName")
//    }
//    scanForTestClasses = false
//    include = "bazu/${d.name}/*.class"
//    testLogging.showStandardStreams = true
//}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile group: 'io.appium', name: 'java-client', version: '5.0.0-BETA9'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    compile group: 'javax.mail', name: 'javax.mail-api', version: '1.5.6'
//    compile group: 'com.sikulix', name: 'sikulixapi', version: '1.1.0'
    compile('com.sikulix:sikulixapi:1.1.0') {
        exclude module: '${sikulix.libs}'
    }
    switch (System.getProperty('os.name').toLowerCase().split()[0]) {
        case 'windows':
            compile group: 'com.sikulix', name: 'sikulixlibswin', version: '1.1.0'
            break
        case 'linux':
            compile group: 'com.sikulix', name: 'sikulixlibslux', version: '1.1.0'
            break
        case 'mac':
            compile group: 'com.sikulix', name: 'sikulixlibsmac', version: '1.1.0' // MAC
            break
        default:
            throw new Exception('Unknown OS')
    }

}
